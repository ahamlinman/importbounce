AWSTemplateFormatVersion: 2010-09-09

Description: Redirect server for custom Go import paths

Parameters:
  DomainName:
    Type: String
    Description: Domain name for the redirector to host.
  ConfigFilePath:
    Type: String
    Description: Path to the TOML config file in the S3 bucket.
    Default: importbounce.toml
  TracingEnabled:
    Type: String
    Description: If 'true', turn on X-Ray tracing for all supported resources.
    Default: 'true'
  ConfigFileNoSSL:
    Type: String
    Description: >-
      If 'true', disable SSL when requesting the TOML config file from S3. This
      significantly speeds up Lambda cold starts at the cost of reduced
      security.
    Default: 'false'

Conditions:
  HasTracingEnabled: !Equals [!Ref TracingEnabled, 'true']
  HasConfigFileNoSSL: !Equals [!Ref ConfigFileNoSSL, 'true']

Resources:
  ConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Redirect server for custom Go import paths
      Role: !GetAtt LambdaFunctionRole.Arn
      Runtime: go1.x
      Code: ./lambda-dist
      Handler: importbounce
      Environment:
        Variables:
          GO_API_HOST: !Sub 'https://${DomainName}'
          IMPORTBOUNCE_CONFIG_URL: !If
            - HasConfigFileNoSSL
            - !Sub 's3+nossl://${ConfigBucket}/${ConfigFilePath}'
            - !Sub 's3://${ConfigBucket}/${ConfigFilePath}'
      TracingConfig:
        Mode: !If [HasTracingEnabled, Active, PassThrough]

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: ConfigBucketGetObject
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub '${ConfigBucket.Arn}/*'

  LambdaFunctionRestApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      Action: lambda:invokeFunction
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*'

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Redirect server for custom Go import paths
      Name: !Ref AWS::StackName

  RestApiRootMethod:
    Type: AWS::ApiGateway::Method
    Properties: &RestApiMethodProperties
      RestApiId: !Ref RestApi
      ResourceId: !GetAtt RestApi.RootResourceId
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'

  RestApiAnyPathResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: '{proxy+}'

  RestApiAnyPathMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *RestApiMethodProperties
      ResourceId: !Ref RestApiAnyPathResource

  RestApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - RestApiRootMethod
      - RestApiAnyPathMethod
    Properties:
      RestApiId: !Ref RestApi

  RestApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApi
      DeploymentId: !Ref RestApiDeployment
      TracingEnabled: !If [HasTracingEnabled, true, false]

  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Ref DomainName
        Origins:
          - Id: RestApi
            DomainName: !Sub '${RestApi}.execute-api.${AWS::Region}.amazonaws.com'
            OriginPath: !Sub '/${RestApiStage}'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: RestApi
          ForwardedValues:
            QueryString: true
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 0
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only

Outputs:
  ConfigS3URI:
    Description: The location in S3 to which the TOML configuration should be uploaded
    Value: !Sub 's3://${ConfigBucket}/${ConfigFilePath}'
  ApiDomain:
    Description: The CNAME to which the domain name should point
    Value: !GetAtt CloudFrontDistribution.DomainName
